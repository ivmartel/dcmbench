import { p as createAllConfigs } from './utils.js';
import arrayBracketNewline from './rules/array-bracket-newline.js';
import arrayBracketSpacing from './rules/array-bracket-spacing.js';
import arrayElementNewline from './rules/array-element-newline.js';
import arrowParens from './rules/arrow-parens.js';
import arrowSpacing from './rules/arrow-spacing.js';
import blockSpacing from './rules/block-spacing.js';
import braceStyle from './rules/brace-style.js';
import commaDangle from './rules/comma-dangle.js';
import commaSpacing from './rules/comma-spacing.js';
import commaStyle from './rules/comma-style.js';
import computedPropertySpacing from './rules/computed-property-spacing.js';
import dotLocation from './rules/dot-location.js';
import eolLast from './rules/eol-last.js';
import functionCallArgumentNewline from './rules/function-call-argument-newline.js';
import functionCallSpacing from './rules/function-call-spacing.js';
import functionParenNewline from './rules/function-paren-newline.js';
import generatorStarSpacing from './rules/generator-star-spacing.js';
import implicitArrowLinebreak from './rules/implicit-arrow-linebreak.js';
import indent from './rules/indent.js';
import jsxQuotes from './rules/jsx-quotes.js';
import keySpacing from './rules/key-spacing.js';
import keywordSpacing from './rules/keyword-spacing.js';
import lineCommentPosition from './rules/line-comment-position.js';
import linebreakStyle from './rules/linebreak-style.js';
import linesAroundComment from './rules/lines-around-comment.js';
import linesBetweenClassMembers from './rules/lines-between-class-members.js';
import maxLen from './rules/max-len.js';
import maxStatementsPerLine from './rules/max-statements-per-line.js';
import multilineCommentStyle from './rules/multiline-comment-style.js';
import multilineTernary from './rules/multiline-ternary.js';
import newParens from './rules/new-parens.js';
import newlinePerChainedCall from './rules/newline-per-chained-call.js';
import noConfusingArrow from './rules/no-confusing-arrow.js';
import noExtraParens from './rules/no-extra-parens.js';
import noExtraSemi from './rules/no-extra-semi.js';
import noFloatingDecimal from './rules/no-floating-decimal.js';
import noMixedOperators from './rules/no-mixed-operators.js';
import noMixedSpacesAndTabs from './rules/no-mixed-spaces-and-tabs.js';
import noMultiSpaces from './rules/no-multi-spaces.js';
import noMultipleEmptyLines from './rules/no-multiple-empty-lines.js';
import noTabs from './rules/no-tabs.js';
import noTrailingSpaces from './rules/no-trailing-spaces.js';
import noWhitespaceBeforeProperty from './rules/no-whitespace-before-property.js';
import nonblockStatementBodyPosition from './rules/nonblock-statement-body-position.js';
import objectCurlyNewline from './rules/object-curly-newline.js';
import objectCurlySpacing from './rules/object-curly-spacing.js';
import objectPropertyNewline from './rules/object-property-newline.js';
import oneVarDeclarationPerLine from './rules/one-var-declaration-per-line.js';
import operatorLinebreak from './rules/operator-linebreak.js';
import paddedBlocks from './rules/padded-blocks.js';
import paddingLineBetweenStatements from './rules/padding-line-between-statements.js';
import quoteProps from './rules/quote-props.js';
import quotes from './rules/quotes.js';
import restSpreadSpacing from './rules/rest-spread-spacing.js';
import semiSpacing from './rules/semi-spacing.js';
import semiStyle from './rules/semi-style.js';
import semi from './rules/semi.js';
import spaceBeforeBlocks from './rules/space-before-blocks.js';
import spaceBeforeFunctionParen from './rules/space-before-function-paren.js';
import spaceInParens from './rules/space-in-parens.js';
import spaceInfixOps from './rules/space-infix-ops.js';
import spaceUnaryOps from './rules/space-unary-ops.js';
import spacedComment from './rules/spaced-comment.js';
import switchColonSpacing from './rules/switch-colon-spacing.js';
import templateCurlySpacing from './rules/template-curly-spacing.js';
import templateTagSpacing from './rules/template-tag-spacing.js';
import wrapIife from './rules/wrap-iife.js';
import wrapRegex from './rules/wrap-regex.js';
import yieldStarSpacing from './rules/yield-star-spacing.js';

var rules = {
  "array-bracket-newline": arrayBracketNewline,
  "array-bracket-spacing": arrayBracketSpacing,
  "array-element-newline": arrayElementNewline,
  "arrow-parens": arrowParens,
  "arrow-spacing": arrowSpacing,
  "block-spacing": blockSpacing,
  "brace-style": braceStyle,
  "comma-dangle": commaDangle,
  "comma-spacing": commaSpacing,
  "comma-style": commaStyle,
  "computed-property-spacing": computedPropertySpacing,
  "dot-location": dotLocation,
  "eol-last": eolLast,
  "func-call-spacing": functionCallSpacing,
  "function-call-argument-newline": functionCallArgumentNewline,
  "function-call-spacing": functionCallSpacing,
  "function-paren-newline": functionParenNewline,
  "generator-star-spacing": generatorStarSpacing,
  "implicit-arrow-linebreak": implicitArrowLinebreak,
  "indent": indent,
  "jsx-quotes": jsxQuotes,
  "key-spacing": keySpacing,
  "keyword-spacing": keywordSpacing,
  "line-comment-position": lineCommentPosition,
  "linebreak-style": linebreakStyle,
  "lines-around-comment": linesAroundComment,
  "lines-between-class-members": linesBetweenClassMembers,
  "max-len": maxLen,
  "max-statements-per-line": maxStatementsPerLine,
  "multiline-comment-style": multilineCommentStyle,
  "multiline-ternary": multilineTernary,
  "new-parens": newParens,
  "newline-per-chained-call": newlinePerChainedCall,
  "no-confusing-arrow": noConfusingArrow,
  "no-extra-parens": noExtraParens,
  "no-extra-semi": noExtraSemi,
  "no-floating-decimal": noFloatingDecimal,
  "no-mixed-operators": noMixedOperators,
  "no-mixed-spaces-and-tabs": noMixedSpacesAndTabs,
  "no-multi-spaces": noMultiSpaces,
  "no-multiple-empty-lines": noMultipleEmptyLines,
  "no-tabs": noTabs,
  "no-trailing-spaces": noTrailingSpaces,
  "no-whitespace-before-property": noWhitespaceBeforeProperty,
  "nonblock-statement-body-position": nonblockStatementBodyPosition,
  "object-curly-newline": objectCurlyNewline,
  "object-curly-spacing": objectCurlySpacing,
  "object-property-newline": objectPropertyNewline,
  "one-var-declaration-per-line": oneVarDeclarationPerLine,
  "operator-linebreak": operatorLinebreak,
  "padded-blocks": paddedBlocks,
  "padding-line-between-statements": paddingLineBetweenStatements,
  "quote-props": quoteProps,
  "quotes": quotes,
  "rest-spread-spacing": restSpreadSpacing,
  "semi": semi,
  "semi-spacing": semiSpacing,
  "semi-style": semiStyle,
  "space-before-blocks": spaceBeforeBlocks,
  "space-before-function-paren": spaceBeforeFunctionParen,
  "space-in-parens": spaceInParens,
  "space-infix-ops": spaceInfixOps,
  "space-unary-ops": spaceUnaryOps,
  "spaced-comment": spacedComment,
  "switch-colon-spacing": switchColonSpacing,
  "template-curly-spacing": templateCurlySpacing,
  "template-tag-spacing": templateTagSpacing,
  "wrap-iife": wrapIife,
  "wrap-regex": wrapRegex,
  "yield-star-spacing": yieldStarSpacing
};

var plugin = {
  rules
};

const config = {
  rules: {
    "array-bracket-newline": 0,
    "array-bracket-spacing": 0,
    "array-element-newline": 0,
    "arrow-parens": 0,
    "arrow-spacing": 0,
    "block-spacing": 0,
    "brace-style": 0,
    "comma-dangle": 0,
    "comma-spacing": 0,
    "comma-style": 0,
    "computed-property-spacing": 0,
    "dot-location": 0,
    "eol-last": 0,
    "func-call-spacing": 0,
    "function-call-argument-newline": 0,
    "function-paren-newline": 0,
    "generator-star-spacing": 0,
    "implicit-arrow-linebreak": 0,
    "indent": 0,
    "jsx-quotes": 0,
    "key-spacing": 0,
    "keyword-spacing": 0,
    "line-comment-position": 0,
    "linebreak-style": 0,
    "lines-around-comment": 0,
    "lines-between-class-members": 0,
    "max-len": 0,
    "max-statements-per-line": 0,
    "multiline-comment-style": 0,
    "multiline-ternary": 0,
    "new-parens": 0,
    "newline-per-chained-call": 0,
    "no-confusing-arrow": 0,
    "no-extra-parens": 0,
    "no-extra-semi": 0,
    "no-floating-decimal": 0,
    "no-mixed-operators": 0,
    "no-mixed-spaces-and-tabs": 0,
    "no-multi-spaces": 0,
    "no-multiple-empty-lines": 0,
    "no-tabs": 0,
    "no-trailing-spaces": 0,
    "no-whitespace-before-property": 0,
    "nonblock-statement-body-position": 0,
    "object-curly-newline": 0,
    "object-curly-spacing": 0,
    "object-property-newline": 0,
    "one-var-declaration-per-line": 0,
    "operator-linebreak": 0,
    "padded-blocks": 0,
    "padding-line-between-statements": 0,
    "quote-props": 0,
    "quotes": 0,
    "rest-spread-spacing": 0,
    "semi": 0,
    "semi-spacing": 0,
    "semi-style": 0,
    "space-before-blocks": 0,
    "space-before-function-paren": 0,
    "space-in-parens": 0,
    "space-infix-ops": 0,
    "space-unary-ops": 0,
    "spaced-comment": 0,
    "switch-colon-spacing": 0,
    "template-curly-spacing": 0,
    "template-tag-spacing": 0,
    "wrap-iife": 0,
    "wrap-regex": 0,
    "yield-star-spacing": 0
  }
};

const all = /* @__PURE__ */ createAllConfigs(plugin, "@stylistic/js");
const configs = {
  "disable-legacy": config,
  all,
  /**
   * @deprecated use `all` instead.
   */
  "all-flat": all
};

export { configs as c, plugin as p };
